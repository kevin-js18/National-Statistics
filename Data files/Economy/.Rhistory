ggplot() +
geom_polygon(data = final.plot,
aes(x = long, y = lat, group = group, fill = Percent),
col = "white") +
coord_map() +
scale_fill_gradient(low = "white", high = "#2093ea", limits = c(0, 60)) +
geom_text(data = pct_labels, aes(x = long, y = lat, label = paste(factor.Percent., "%")), size = 3, fontface = "bold") +
theme_nothing(legend = TRUE)
pct_labels
ggplot() +
geom_polygon(data = final.plot,
aes(x = long, y = lat, group = group, fill = Percent),
col = "white") +
coord_map() +
scale_fill_gradient(low = "white", high = "#2093ea", limits = c(0, 60)) +
theme_nothing(legend = TRUE)
pct_labels <- aggregate(cbind(lat, long) ~ id, data = final.plot, FUN = function(x) {mean(range(x))})
pct_labels <- data.frame(pct_labels)
ggplot() +
geom_polygon(data = final.plot,
aes(x = long, y = lat, group = group, fill = Percent),
col = "white") +
coord_map() +
scale_fill_gradient(low = "white", high = "#2093ea", limits = c(0, 60)) +
geom_text(pct_labels, aes(x = long, y = lat, label = paste(final.plot$Percent[grep(pct_labels$id, final.plot$id)], "%")))
theme_nothing(legend = TRUE)
ggplot() +
geom_polygon(data = final.plot,
aes(x = long, y = lat, group = group, fill = Percent),
col = "white") +
coord_map() +
scale_fill_gradient(low = "white", high = "#2093ea", limits = c(0, 60)) +
geom_text(data = pct_labels, aes(x = long, y = lat, label = paste(final.plot$Percent[grep(pct_labels$id, final.plot$id)], "%")))
theme_nothing(legend = TRUE)
ggplot() +
geom_polygon(data = final.plot,
aes(x = long, y = lat, group = group, fill = Percent),
col = "white") +
coord_map() +
scale_fill_gradient(low = "white", high = "#2093ea", limits = c(0, 60)) +
theme_nothing(legend = TRUE)
names(dd_df)
names(dd_data)
names(final.plot)
ggplot() +
geom_polygon(data = final.plot,
aes(x = long, y = lat, group = group, fill = `Eligible for DAPA or DACA`),
col = "white") +
coord_map() +
scale_fill_gradient(low = "white", high = "#2093ea", limits = c(0, 60)) +
theme_nothing(legend = TRUE)
ggplot() +
geom_polygon(data = final.plot,
aes(x = long, y = lat, group = group, fill = `Eligible for DAPA or DACA`),
col = "white") +
coord_map() +
scale_fill_gradient(low = "white", high = "#2093ea") +
theme_nothing(legend = TRUE)
ggplot() +
geom_polygon(data = final.plot,
aes(x = long, y = lat, group = group, fill = Percent),
col = "white") +
coord_map() +
scale_fill_gradient(low = "white", high = "#2093ea") +
theme_nothing(legend = TRUE)
ggplot() +
geom_polygon(data = final.plot,
aes(x = long, y = lat, group = group, fill = Percent),
col = "white") +
coord_map() +
scale_fill_gradient(low = "white", high = "#2093ea", limits = c(0, 60)) +
theme_nothing(legend = TRUE)
names(final.plot)
final.plot <- final.plot %>%
mutate(Label = paste(id, ": ", Percent, "%"))
final.plot$Label
?paste
setwd("C:/Users/aet/Desktop/School/R projects/Final project/President-Obama-Evaluation/Data files/Immigration data")
dd_data <- read_csv("DAPA-DACA.csv")
dd_df <- data.frame(dd_data)
state.shp <- readShapePoly("Shapefiles/cb_2015_us_state_20m/cb_2015_us_state_20m.shp")
state.shp <- subset(state.shp, state.shp$NAME != "Alaska")
state.shp <- subset(state.shp, state.shp$NAME != "Hawaii")
state.shp <- subset(state.shp, state.shp$NAME != "Puerto Rico")
names(state.shp)[6] <- "id"
names(dd_data)[1] <- "id"
state.shp.f <- fortify(state.shp, region = "id")
merge.shp <- merge(state.shp.f, dd_data, by = "id", all.x = TRUE)
final.plot <- merge.shp[order(merge.shp$order), ]
final.plot <- final.plot %>%
mutate(Label = paste(Code, ": ", Percent, "%", sep = ""))
final.plot$Label
pct_labels <- aggregate(cbind(lat, long) ~ Label, data = final.plot, FUN = function(x) {mean(range(x))})
pct_labels <- data.frame(pct_labels)
ggplot() +
geom_polygon(data = final.plot,
aes(x = long, y = lat, group = group, fill = Percent),
col = "white") +
coord_map() +
scale_fill_gradient(low = "white", high = "#2093ea", limits = c(0, 60)) +
geom_text(data = pct_labels, aes(x = long, y = lat, label = Label), size = 3, fontface = "bold") +
theme_nothing(legend = TRUE)
coordinates(state.shp)
head(state.shp)
coordinates(state.shp)
coord.df <- data.frame(coordinates(state.shp))
names(coord.df) <- c("Longitude", "Latitude")
state.shp <- readShapePoly("Shapefiles/cb_2015_us_state_20m/cb_2015_us_state_20m.shp")
coord.df <- data.frame(coordinates(state.shp))
names(coord.df) <- c("Longitude", "Latitude")
for (i in 1:length(state.shp$NAME)) {
state.shp$Long[i] <- coord.df$Longitude[i]
state.shp$Lat[i] <- coord.df$Latitude[i]
}
state.shp <- subset(state.shp, state.shp$NAME != "Alaska")
state.shp <- subset(state.shp, state.shp$NAME != "Hawaii")
state.shp <- subset(state.shp, state.shp$NAME != "Puerto Rico")
state.shp <- subset(state.shp, state.shp$NAME != "District of Columbia")
names(state.shp)[6] <- "id"
names(dd_data)[1] <- "id"
state.shp.f <- fortify(state.shp, region = "id")
merge.shp <- merge(state.shp.f, dd_data, by = "id", all.x = TRUE)
final.plot <- merge.shp[order(merge.shp$order), ]
ggplot() +
geom_polygon(data = final.plot,
aes(x = long, y = lat, group = group, fill = Percent),
col = "white") +
coord_map() +
scale_fill_gradient(low = "white", high = "#2093ea", limits = c(0, 60)) +
geom_text(aes(x = Long, y = Lat, label = Percent), size = 3, fontface = "bold") +
theme_nothing(legend = TRUE)
setwd("C:/Users/aet/Desktop/School/R projects/Final project/President-Obama-Evaluation/Data files/Immigration data")
dd_data <- read_csv("DAPA-DACA.csv")
dd_df <- data.frame(dd_data)
state.shp <- readShapePoly("Shapefiles/cb_2015_us_state_20m/cb_2015_us_state_20m.shp")
coord.df <- data.frame(coordinates(state.shp))
names(coord.df) <- c("Longitude", "Latitude")
for (i in 1:length(state.shp$NAME)) {
state.shp$Long[i] <- coord.df$Longitude[i]
state.shp$Lat[i] <- coord.df$Latitude[i]
}
state.shp <- subset(state.shp, state.shp$NAME != "Alaska")
state.shp <- subset(state.shp, state.shp$NAME != "Hawaii")
state.shp <- subset(state.shp, state.shp$NAME != "Puerto Rico")
state.shp <- subset(state.shp, state.shp$NAME != "District of Columbia")
names(state.shp)[6] <- "id"
names(dd_data)[1] <- "id"
state.shp.f <- fortify(state.shp, region = "id")
merge.shp <- merge(state.shp.f, dd_data, by = "id", all.x = TRUE)
final.plot <- merge.shp[order(merge.shp$order), ]
state.shp$Lat
state.shp$Long
state.shp$id
state.shp[1]
ggplot() +
geom_map(data = final.plot,
aes(x = long, y = lat, group = group, fill = Percent),
col = "white") +
coord_map() +
scale_fill_gradient(low = "white", high = "#2093ea", limits = c(0, 60)) +
theme_nothing(legend = TRUE)
ggplot() +
geom_map(map = final.plot,
aes(x = long, y = lat, group = group, fill = Percent),
col = "white") +
coord_map() +
scale_fill_gradient(low = "white", high = "#2093ea", limits = c(0, 60)) +
theme_nothing(legend = TRUE)
for (i in 1:length(final.plot$id)) {
final.plot$clong[i] <- state.shp$Long[grep(final.plot$id[i], state.shp$id)]
final.plot$clat[i] <- state.shp$Lat[grep(final.plot$id[i], state.shp$id)]
}
warnings
ggplot() +
geom_polygon(data = final.plot,
aes(x = long, y = lat, group = group, fill = Percent),
col = "white") +
coord_map() +
scale_fill_gradient(low = "white", high = "#2093ea", limits = c(0, 60)) +
geom_text(aes(x = clong, y = clat, label = Percent), size = 3, fontface = "bold") +
theme_nothing(legend = TRUE)
final.plot$clong
ggplot() +
geom_polygon(data = final.plot,
aes(x = long, y = lat, group = group, fill = Percent),
col = "white") +
coord_map() +
scale_fill_gradient(low = "white", high = "#2093ea", limits = c(0, 60)) +
geom_text(data = final.plot, aes(x = clong, y = clat, label = Percent), size = 3, fontface = "bold") +
theme_nothing(legend = TRUE)
ggplot() +
geom_polygon(data = final.plot,
aes(x = long, y = lat, group = group, fill = Percent),
col = "white") +
coord_map() +
scale_fill_gradient(low = "white", high = "#2093ea", limits = c(0, 60)) +
geom_text(data = final.plot, aes(x = clong, y = clat, label = Percent), size = 3) +
theme_nothing(legend = TRUE)
ggplot() +
geom_polygon(data = final.plot,
aes(x = long, y = lat, group = group, fill = Percent),
col = "white") +
coord_map() +
scale_fill_gradient(low = "white", high = "#2093ea", limits = c(0, 60)) +
geom_text(data = final.plot, aes(x = clong, y = clat, label = paste(Percent, "%", sep="")), size = 3) +
theme_nothing(legend = TRUE)
?paste
ggplot() +
geom_polygon(data = final.plot,
aes(x = long, y = lat, group = group, fill = Percent),
col = "white") +
coord_map() +
scale_fill_gradient(low = "white", high = "#2093ea", limits = c(0, 60)) +
geom_text(data = final.plot, aes(x = clong, y = clat, label = paste(Percent, "%", sep="", NA_character_ == FALSE)), size = 3) +
theme_nothing(legend = TRUE)
ggplot() +
geom_polygon(data = final.plot,
aes(x = long, y = lat, group = group, fill = Percent),
col = "white") +
coord_map() +
scale_fill_gradient(low = "white", high = "#2093ea", limits = c(0, 60)) +
geom_text(data = final.plot, aes(x = clong, y = clat, label = paste(Percent, "%", sep="", NA_character_ == TRUE)), size = 3) +
theme_nothing(legend = TRUE)
ggplot() +
geom_polygon(data = final.plot,
aes(x = long, y = lat, group = group, fill = Percent),
col = "white") +
coord_map() +
scale_fill_gradient(low = "white", high = "#2093ea", limits = c(0, 60)) +
geom_text(data = final.plot, aes(x = clong, y = clat, label = paste(Percent, "%", sep="")), size = 3) +
theme_nothing(legend = TRUE)
library(Cairo)
ggsave("dapa-daca.png", plot = map1,
path = "C:/Users/aet/Desktop/School/R projects/Final project/President-Obama-Evaluation/Charts/Immigration/dapa-daca.png",
type = "cairo-png")
map1 <- ggplot() +
geom_polygon(data = final.plot,
aes(x = long, y = lat, group = group, fill = Percent),
col = "white") +
coord_map() +
scale_fill_gradient(low = "white", high = "#2093ea", limits = c(0, 60)) +
geom_text(data = final.plot, aes(x = clong, y = clat, label = paste(Percent, "%", sep="")), size = 3) +
theme_nothing(legend = TRUE)
ggsave("dapa-daca.png", plot = map1,
path = "C:/Users/aet/Desktop/School/R projects/Final project/President-Obama-Evaluation/Charts/Immigration/dapa-daca.png",
type = "cairo-png")
ggplot(renewables.consum, aes(x = Year, y = `Consumption (in trillions of BTUs)`, fill = Source)) +
geom_bar(stat = "identity", position = "dodge") +
scale_x_continuous(breaks = 2000:2015) +
scale_fill_manual(name = "Source",
values = c("#074F57", "#0EB1D2", "#52B788", "#F5A658", "#C1CC99"),
labels = c("Biomass", "Hydroelectric", "Wind", "Solar", "Geothermal")) +
ggtitle("Consumption")
setwd("C:/Users/aet/Desktop/School/R projects/Final project/President-Obama-Evaluation/Data files/Energy, Environment data")
renewables <- read_csv("Renewables by source.csv")
renewables.prod <- gather(renewables, Source, `Production (in trillions of BTUs)`, -(Year:`Total Biomass Energy Production`), -(`Hydroelectric Power Consumption`:`Total Renewable Energy Consumption`))
renewables.consum <- gather(renewables, Source, `Consumption (in trillions of BTUs)`, `Hydroelectric Power Consumption`:`Wind Energy Consumption`, `Total Biomass Energy Consumption`, -(`Biofuels Production`:`Total Renewable Energy Production`), -(`Wood Energy Consumption`:`Biofuels Consumption`), -(`Total Renewable Energy Consumption`))
renewables.consum$Source <- factor(renewables.consum$Source, levels = c("Total Biomass Energy Consumption", "Hydroelectric Power Consumption",
"Wind Energy Consumption", "Solar Energy Consumption", "Geothermal Energy Consumption"))
renewables.consum <- renewables.consum[order(renewables.consum$Source), ]
ggplot(renewables.consum, aes(x = Year, y = `Consumption (in trillions of BTUs)`, fill = Source)) +
geom_bar(stat = "identity", position = "dodge") +
scale_x_continuous(breaks = 2000:2015) +
scale_fill_manual(name = "Source",
values = c("#074F57", "#0EB1D2", "#52B788", "#F5A658", "#C1CC99"),
labels = c("Biomass", "Hydroelectric", "Wind", "Solar", "Geothermal")) +
ggtitle("Consumption")
ggplot(renewables.consum, aes(x = Year, y = `Consumption (in trillions of BTUs)`, fill = Source)) +
geom_bar(stat = "identity", position = "dodge") +
scale_x_continuous(breaks = 2000:2015) +
scale_fill_manual(name = "Source",
values = c("#074F57", "#0EB1D2", "#52B788", "#F5A658", "#C1CC99"),
labels = c("Biomass", "Hydroelectric", "Wind", "Solar", "Geothermal")) +
ggtitle("Consumption") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
ggplot(renewables.consum, aes(x = Year, y = `Consumption (in trillions of BTUs)`, fill = Source)) +
geom_bar(stat = "identity", position = "dodge") +
scale_x_continuous(breaks = 2000:2015) +
scale_fill_manual(name = "Source",
values = c("#074F57", "#0EB1D2", "#52B788", "#F5A658", "#C1CC99"),
labels = c("Biomass", "Hydroelectric", "Wind", "Solar", "Geothermal")) +
ggtitle("Consumption") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(color = "grey"))
setwd("C:/Users/aet/Desktop/School/R projects/Final project/President-Obama-Evaluation/Data files/Energy, Environment data")
imports <- read_csv("Oil imports.csv")
production <- read_csv("Oil production.csv")
exports <- read_csv("Oil exports.csv")
production <- production[, 1:2]
exports <- exports[, c(1, 3)]
imports <- separate(imports, Date, c("Month", "Year"), sep = "-")
production <- separate(production, Date, c("Month", "Year"), sep = "-")
exports <- separate(exports, Date, c("Month", "Year"), sep = "-")
for (i in 1:length(production$`U.S. Field Production of Crude Oil (Thousand Barrels)`)) {
production$`U.S. Field Production of Crude Oil (Thousand Barrels)`[i] <- production$`U.S. Field Production of Crude Oil (Thousand Barrels)`[i] - exports$`U.S. Exports of Crude Oil (Thousand Barrels)`[i]
}
production <- production %>%
group_by(Year) %>%
summarise(total = sum(`U.S. Field Production of Crude Oil (Thousand Barrels)`))
production <- subset(production, production$Year >= 2000 & production$Year < 2016)
names(imports) <- sapply(strsplit(names(imports), " of Crude Oil \\(Thousand Barrels"), "[", 1)
names(imports) <- sapply(strsplit(names(imports), "Imports from "), "[", 2)
names(imports)[c(1, 2, 3)] <- c("Month", "Year", "Total")
ranking <- imports %>%
gather(Country, Oil, `Persian Gulf Countries`:Yemen) %>%
group_by(Country)
for (i in 1:length(ranking$Oil)) {
if (is.na(ranking$Oil[i])) {
ranking$Oil[i] <- 0
}
}
ranking$Oil <- as.integer(ranking$Oil)
ranking <- subset(ranking, ranking$Year >= 2000 & ranking$Year < 2016)
by_year <- ranking
ranking <- ranking %>%
group_by(Country) %>%
summarise(total_barrels = sum(Oil)) %>%
arrange(desc(total_barrels))
by_year <- subset(by_year, by_year$Country == "Canada" |
by_year$Country == "Saudi Arabia" |
by_year$Country == "Mexico" |
by_year$Country == "Venezuela" |
by_year$Country == "Nigeria")
by_year_spread <- spread(by_year, Country, Oil)
by_year_spread <- by_year_spread %>%
mutate(`Rest of World` = Total - (Canada + Mexico + Nigeria + `Saudi Arabia` + Venezuela))
by_year_final <- by_year_spread %>%
gather(Country, Total_barrels, Canada:`Rest of World`) %>%
group_by(Country, Year) %>%
summarise(Barrels = sum(Total_barrels))
by_year_final$Country <- factor(by_year_final$Country, levels = c("Canada", "Saudi Arabia", "Mexico", "Venezuela", "Nigeria", "Rest of World"))
by_year_final <- by_year_final[order(by_year_final$Country), ]
ggplot(by_year_final, aes(x = Year, y = Barrels, fill = Country, group = Country)) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(name = "Countries",
values = c("#293132", "#23B5D3", "#6E7E85", "#B7CECE", "#9C92A3", "#DFD6A7"),
breaks = c("Rest of World", "Nigeria", "Venezuela", "Mexico", "Saudi Arabia", "Canada"),
labels = c("Rest of the World", "Nigeria", "Venezuela", "Mexico", "Saudi Arabia", "Canada")) +
scale_y_continuous(name="Crude oil (in thousands of barrels)", labels = comma)
by_year <- subset(by_year, by_year$Country == "Canada" |
by_year$Country == "Saudi Arabia" |
by_year$Country == "Mexico" |
by_year$Country == "Venezuela" |
by_year$Country == "Nigeria")
by_year_spread <- spread(by_year, Country, Oil)
by_year_spread <- by_year_spread %>%
mutate(`Rest of World` = Total - (Canada + Mexico + Nigeria + `Saudi Arabia` + Venezuela))
by_year_final <- by_year_spread %>%
gather(Country, Total_barrels, Canada:Nigeria) %>%
group_by(Country, Year) %>%
summarise(Barrels = sum(Total_barrels))
by_year_final$Country <- factor(by_year_final$Country, levels = c("Canada", "Saudi Arabia", "Mexico", "Venezuela", "Nigeria"))
by_year_final <- by_year_final[order(by_year_final$Country), ]
ggplot(by_year_final, aes(x = Year, y = Barrels, fill = Country, group = Country)) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(name = "Countries",
values = c("#293132", "#23B5D3", "#6E7E85", "#B7CECE", "#9C92A3"),
breaks = c("Nigeria", "Venezuela", "Mexico", "Saudi Arabia", "Canada"),
labels = c("Nigeria", "Venezuela", "Mexico", "Saudi Arabia", "Canada")) +
scale_y_continuous(name="Crude oil (in thousands of barrels)", labels = comma)
by_year <- subset(by_year, by_year$Country == "Canada" |
by_year$Country == "Saudi Arabia" |
by_year$Country == "Mexico" |
by_year$Country == "Venezuela" |
by_year$Country == "Nigeria")
by_year_spread <- spread(by_year, Country, Oil)
by_year_spread <- by_year_spread %>%
mutate(`Rest of World` = Total - (Canada + Mexico + Nigeria + `Saudi Arabia` + Venezuela))
by_year_final <- by_year_spread %>%
gather(Country, Total_barrels, Canada:Venezuela) %>%
group_by(Country, Year) %>%
summarise(Barrels = sum(Total_barrels))
by_year_final$Country <- factor(by_year_final$Country, levels = c("Canada", "Saudi Arabia", "Mexico", "Venezuela", "Nigeria"))
by_year_final <- by_year_final[order(by_year_final$Country), ]
ggplot(by_year_final, aes(x = Year, y = Barrels, fill = Country, group = Country)) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(name = "Countries",
values = c("#293132", "#23B5D3", "#6E7E85", "#B7CECE", "#9C92A3"),
breaks = c("Nigeria", "Venezuela", "Mexico", "Saudi Arabia", "Canada"),
labels = c("Nigeria", "Venezuela", "Mexico", "Saudi Arabia", "Canada")) +
scale_y_continuous(name="Crude oil (in thousands of barrels)", labels = comma)
ggplot(by_year_final, aes(x = Year, y = Barrels, fill = Country, group = Country)) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(name = "Countries",
values = c("#293132", "#23B5D3", "#6E7E85", "#B7CECE", "#9C92A3"),
breaks = c("Nigeria", "Venezuela", "Mexico", "Saudi Arabia", "Canada"),
labels = c("Nigeria", "Venezuela", "Mexico", "Saudi Arabia", "Canada")) +
scale_y_continuous(name="Crude oil (in thousands of barrels)", labels = comma) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(color = "grey"))
ggplot(renewables.prod, aes(x = Year, y = `Production (in trillions of BTUs)`)) +
geom_bar(stat = "identity") +
scale_x_continuous(breaks = 2000:2015) +
ggtitle("Production") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(color = "grey"))
ggplot(production, aes(x = Year, y = total)) +
geom_bar(stat = "identity") +
scale_y_continuous(name="Crude oil (in thousands of barrels)", labels = comma) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(color = "grey"))
setwd("C:/Users/aet/Desktop/School/R projects/Final project/President-Obama-Evaluation/Data files/Immigration data")
naturalizations <- read_csv("naturalization.csv")
naturalizations <- naturalizations[order(naturalizations$Year), ]
naturalizations <- gather(naturalizations, Status, Applications, Admitted:Denied)
naturalizations00 <- subset(naturalizations, naturalizations$Year >= 2000)
naturalizations00 %>%
group_by(Year) %>%
ggplot(aes(x = Year, y = Applications, fill = Status)) +
geom_bar(stat = "identity") +
scale_y_continuous(name = "Applications", labels = comma) +
scale_x_continuous(breaks = 2000:2015) +
ggtitle("Naturalizations") +
scale_fill_manual(values = c("#4bfc51", "#ff6666"))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(color = "grey"))
import(readr)
import(tidyr)
import(ggplot2)
import(dplyr)
library(readr)
library(tidyr)
library(ggplot2)
library(dplyr)
setwd("C:/Users/aet/Desktop/School/R projects/Final project/President-Obama-Evaluation/Data files/Economy")
share <- read_csv("income inequality.csv")
setwd("C:/Users/aet/Desktop/School/R projects/Final project/President-Obama-Evaluation/Data files/Economy")
share <- read_csv("income inequality.csv")
head(share)
share <- share[, -5]
head(share)
share.g <- share %>%
gather(Year, `Percent Share`, `2015`:`1967`)
head(share.g)
ggplot(share.g, aes(x = Year, y = `Percent Share`, fill = `Measures of income dispersion`)) +
geom_area(stat = "bin")
ggplot(share.g, aes(x = Year, y = `Percent Share`, fill = `Measures of income dispersion`)) +
geom_area()
ggplot(share.g, aes(x = Year, y = `Percent Share`, fill = `Measures of income dispersion`, group = `Measures of income dispersion`)) +
geom_area()
ggplot(share.g, aes(x = Year, y = `Percent Share`, fill = `Measures of income dispersion`, group = `Measures of income dispersion`)) +
geom_area(position = "stack")
ggplot(share.g, aes(x = Year, y = `Percent Share`, fill = `Measures of income dispersion`, group = `Measures of income dispersion`)) +
geom_area(position = "dodge")
ggplot(share.g, aes(x = Year, y = `Percent Share`, fill = `Measures of income dispersion`, group = `Measures of income dispersion`)) +
geom_area(position = "stack")
ggplot(share.g, aes(x = Year, y = `Percent Share`, col = `Measures of income dispersion`, group = `Measures of income dispersion`)) +
geom_line()
share.g10 <- subset(share.g, share.g$Year >= 2000)
ggplot(share.g10, aes(x = Year, y = `Percent Share`, col = `Measures of income dispersion`, group = `Measures of income dispersion`)) +
geom_line()
share.g <- share %>%
gather(Year, `Percent Share`, `2015`:`1967`)
ggplot(share.g, aes(x = Year, y = `Percent Share`, col = `Measures of income dispersion`, group = `Measures of income dispersion`)) +
geom_line()
share.g$Year <- as.numeric(share.g$Year)
ggplot(share.g, aes(x = Year, y = `Percent Share`, col = `Measures of income dispersion`, group = `Measures of income dispersion`)) +
geom_line()
names(share.g)
names(share.g)[1] <- "Quintiles"
share.g$Quintiles <- factor(share.g$Quintiles, levels = c("Highest quintile percent share",
"Fourth quintile percent share",
"Third quintile percent share",
"Second quintile percent share",
"Lowest quintile percent share"))
share.g <- share.g[order(share.g$Quintiles), ]
ggplot(share.g, aes(x = Year, y = `Percent Share`, col = Quintiles, group = Quintiles)) +
geom_line()
ggplot(share.g, aes(x = Year, y = `Percent Share`, col = Quintiles, group = Quintiles)) +
geom_line() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(color = "grey"))
ggplot(share.g, aes(x = Year, y = `Percent Share`, col = Quintiles, group = Quintiles)) +
geom_line() +
theme(panel.background = element_blank(), axis.line = element_line(color = "grey"))
ggplot(share.g, aes(x = Year, y = `Percent Share`, col = Quintiles, group = Quintiles)) +
geom_line() +
theme(panel.background = element_blank())
ggplot(share.g, aes(x = Year, y = `Percent Share`, col = Quintiles, group = Quintiles)) +
geom_line()
library(ggplot2)
library(maptools)
library(ggmap)
library(dplyr)
library(tidyr)
library(RColorBrewer)
library(httr)
library(jsonlite)
app <- oauth_app(appname = "YELP", key = client_id, secret = client_secret)
library(ggplot2)
library(maptools)
library(ggmap)
library(dplyr)
library(tidyr)
library(RColorBrewer)
library(httr)
library(jsonlite)
library(httpuv)
client_id <- "hMmjthRVm_htyFO4YyDu7w"
client_secret <- "0lGxs256qoL3QCHAm12VvIhUDjh5ifXRWPTWxMGh4wFyA0v72H7a1ik4rSWkMSaP"
app <- oauth_app(appname = "YELP", key = client_id, secret = client_secret)
oauth_endpoints("YELP")
oauth_endpoints("yelp")
oauth_endpoints("https://api.yelp.com/oauth2/token")
oauth_endpoints("vimeo")
yelp <- oauth_endpoint("https://api.yelp.com/oauth2/token")
yelp <- oauth_endpoints("https://api.yelp.com/oauth2/token")
token <- oauth1.0_token("https://api.yelp.com/oauth2/token", app)
?oauth1.0_token
sig <- sign_oauth1.0(app, token = token)
token <- "KYgy43k1XO0kC52vuFS6sX6Tab48Lo5MClYkXq-pgeHzdgN_C9S134Qm3YIPPlRTQcIa1lecU6Lh9QX6okuoyc81Pte_50DGOO7gRq2wMtCXwFwYIY03-3JMHYpZWHYx"
sig <- sign_oauth1.0(app, token = token)
